import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFileSync } from "fs";
import { join } from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

// Obsidian plugin directory for development
const OBSIDIAN_PLUGIN_DIR = "C:/Users/adamb/Documents/TheObsidianCompendium_1.0.5/.obsidian/plugins/obsidian-latex-plugin";

// Plugin to copy files to Obsidian after build
const obsidianDeployPlugin = {
	name: 'obsidian-deploy',
	setup(build) {
		build.onEnd(() => {
			if (!prod) {
				try {
					console.log('üìã Copying files to Obsidian...');
					copyFileSync('main.js', join(OBSIDIAN_PLUGIN_DIR, 'main.js'));
					copyFileSync('manifest.json', join(OBSIDIAN_PLUGIN_DIR, 'manifest.json'));
					copyFileSync('versions.json', join(OBSIDIAN_PLUGIN_DIR, 'versions.json'));
					console.log('‚úÖ Plugin deployed to Obsidian! Reload the plugin to see changes.');
				} catch (error) {
					console.error('‚ùå Failed to deploy to Obsidian:', error.message);
				}
			}
		});
	}
};

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	plugins: [obsidianDeployPlugin],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	console.log('üîÑ Watching for changes... (Press Ctrl+C to stop)');
	await context.watch();
} 